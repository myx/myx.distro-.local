#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

: "${MDLT_ORIGIN:=$MMDAPP/.local}"

case "$1" in
	--make-workspace-integration-files)
		shift

		if [ "$MDLT_ORIGIN" = "$MMDAPP/.local" ] ; then
			touch $MDLT_ORIGIN/MDLT.settings.env
		fi

		DistroLocalTools --make-console-command --quiet

		local ITEM NAME FILE
		for ITEM in "System" "Source" "Deploy" "Remote" ; do
			NAME="$( printf '%s' "$ITEM" | tr '[:upper:]' '[:lower:]' )"
			FILE="$MDLT_ORIGIN/myx/myx.distro-${NAME}/sh-lib/Distro${ITEM}ToolsMake.include"
			if [ -f "$FILE" ] ; then
				(
					eval "$(
						echo "Distro${ITEM}Tools(){"
						echo "	. '$FILE'"
						echo "}"
						echo "Distro${ITEM}Tools --make-workspace-integration-files --quiet"
					)"
				)
			fi
		done

		if [ "$1" != "--quiet" ] ; then
			local consoles="$( ls $MMDAPP/Distro*Console.sh | sed 's|^|	|g' )"
			printf \
				"\nNote: shell commands to run distro consoles have been created/updated, now you can run:\n%s\n\n" \
				"$consoles" \
			>&2
		fi

		return 0
	;;
	--make-console-command)
		shift
		set -e
		DistroLocalTools --make-console-script > "$MMDAPP/DistroLocalConsole.sh"
		chmod 770 "$MMDAPP/DistroLocalConsole.sh"

		if [ "$1" != "--quiet" ] ; then
			local consoles="$( ls $MMDAPP/Distro*Console.sh | sed 's|^|	|g' )"
			printf \
				"\nNote: DistroLocalConsole.sh created, now you can run:\n%s\n\n" \
				"$consoles" \
			>&2
		fi

		return 0
	;;
	--make-console-script)
		shift

		cat << 'DISTROCONSOLE'
			#!/usr/bin/env bash

			set -e

			if [ -z "$MMDAPP" ] ; then
				export MMDAPP
				MMDAPP="$( ( cd $(dirname "$0") ; pwd ) )"
			fi

			[ -d "$MMDAPP/.local" ] || ( echo "⛔ ERROR: expecting '$MMDAPP/.local' directory." >&2 && exit 1 )

			MDLT_CONSOLE_ORIGIN="$( ( \
				. "$MMDAPP/.local/MDLT.settings.env" ; \
				echo "${MDLT_CONSOLE_ORIGIN:-.local}" \
			) )"
			MDLC_INMODE="${MDLT_CONSOLE_ORIGIN#$MMDAPP/}"
			case "$MDLC_INMODE" in
				.local)
					export MDLT_ORIGIN="$MMDAPP/.local"
				;;
				source)
					if [ -f "$MMDAPP/source/myx/myx.distro-.local/sh-lib/LocalContext.include" ] ; then
						export MDLT_ORIGIN="$MMDAPP/$MDLC_INMODE"
					else
						export MDLT_ORIGIN="$MMDAPP/.local"
					fi
				;;
				/*)
					if [ -f "$MDLC_INMODE/myx/myx.distro-.local/sh-lib/LocalContext.include" ] ; then
						export MDLT_ORIGIN="$MDLC_INMODE"
					else
						export MDLT_ORIGIN="$MMDAPP/.local"
					fi
				;;
				*)
					export MDLT_ORIGIN="$MMDAPP/.local"
				;;
			esac
			if [ ! -f "$MMDAPP/source/myx/myx.distro-source/sh-lib/SourceContext.include" ] ; then
				echo "⛔ ERROR: Context.SetInputSpec: can't find/detect origin" >&2
				exit 1
			fi

			cd "$MMDAPP"
			export MMDAPP

			if [ "$1" == "--non-interactive" ] ; then
				shift
				{
					echo . "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/console-.local-bashrc.rc"
					cat
				} | bash "$@"
				exit 0
			fi
			
			bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/console-.local-bashrc.rc" -i "$@"
DISTROCONSOLE

		return 0
	;;
	*)
		echo "⛔ ERROR: $MDSC_CMD: invalid option: $1" >&2
		set +e ; return 1
	;;
esac
