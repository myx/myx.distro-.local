#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

: "${MDLT_ORIGIN:=$MMDAPP/.local}"

case "$1" in
	--make-setup-mac)
		shift
		DistroLocalTools --make-setup-mac-finder-view "$@"
		DistroLocalTools --make-setup-mac-quicklook-bindings "$@"
	;;
	--make-setup-mac-finder-view)
		shift
		(
			. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.AppleFinderViewSetup.fn.include" 
			AppleFinderViewSetup "$@" "$MMDAPP"
		)
	;;
	--make-setup-mac-quicklook-bindings)
		shift
		(
			. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.AppleOsxQuickLookSetup.include" 
		)
	;;
	--make-workspace-integration-files)
		shift

		if [ "$MDLT_ORIGIN" = "$MMDAPP/.local" ] && [ ! -f "$MDLT_ORIGIN/MDLT.settings.env" ]; then
			touch "$MDLT_ORIGIN/MDLT.settings.env"
		fi

		DistroLocalTools --make-console-command --quiet
		local ITEM NAME FILE
		for ITEM in "System" "Source" "Deploy" "Remote" ; do
			NAME="$( printf '%s' "$ITEM" | tr '[:upper:]' '[:lower:]' )"
			FILE="$MDLT_ORIGIN/myx/myx.distro-${NAME}/sh-lib/${ITEM}Tools.Make.include"
			if [ -f "$FILE" ] ; then
				(
					eval "$(
						echo "Distro${ITEM}Tools(){"
						echo "	. '$FILE'"
						echo "}"
						echo "Distro${ITEM}Tools --make-workspace-integration-files --quiet || :"
					)"
				)
			fi
		done

		[ "$(uname)" != "Darwin" ] || DistroLocalTools --make-setup-mac

		if [ "$1" != "--quiet" ] ; then
			local consoles="$( ls $MMDAPP/Distro*Console.sh | sed 's|^|	|g' )"
			printf \
				"\nNote: shell commands to run distro consoles have been created/updated, now you can run:\n%s\n\n" \
				"$consoles" \
			>&2
		fi

		return 0
	;;
	--make-console-command)
		shift
		set -e
		# shortcut for: `DistroLocalTools --make-console-script`
		. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.Make.DistroLocalConsoleShellScript.include" \
		> "$MMDAPP/DistroLocalConsole.sh"
		chmod 770 "$MMDAPP/DistroLocalConsole.sh"

		if [ "$1" != "--quiet" ] ; then
			local consoles="$( ls $MMDAPP/Distro*Console.sh | sed 's|^|	|g' )"
			printf \
				"\nNote: DistroLocalConsole.sh created, now you can run:\n%s\n\n" \
				"$consoles" \
			>&2
		fi

		return 0
	;;
	--make-console-script)
		shift
		. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.Make.DistroLocalConsoleShellScript.include" 
		return 0
	;;
	--make-clean-fs-garbage)
		# myx.common remove/fileJunk --quiet --any-xattrs "${1:-$MMDAPP/}"

		# 1. Find & delete known junk files
		find "${1:-$MMDAPP/}" -type f \( \
		-name '.DS_Store' -o \
		-name '._*' -o \
		-name '.AppleDouble' -o \
		-name 'Icon?' -o \
		-name '.Trashes' \
		\) ! -path '*/.git/*' -exec rm -f {} +

		# 2. Remove junk directories
		find "${1:-$MMDAPP/}" -type d \( \
		-name '.Spotlight-V100' -o \
		-name '.Trashes' -o \
		-name '.AppleDouble' \
		\) ! -path '*/.git/*' -exec rm -rf {} +

		# 3. Remove extended attributes if supported (macOS/FreeBSD only)
		if command -v xattr >/dev/null 2>&1; then
		find "${1:-$MMDAPP/}" ! -path '*/.git/*' -exec xattr -c {} 2>/dev/null \;
		elif command -v setfattr >/dev/null 2>&1; then
		find "${1:-$MMDAPP/}" ! -path '*/.git/*' -exec setfattr -h -x user.* {} 2>/dev/null \;
		fi

		echo "✔️ Clean-up complete. Your workspace should be tidy now."

		return 0
	;;
	*)
		echo "⛔ ERROR: $MDSC_CMD: invalid option: $1" >&2
		set +e ; return 1
	;;
esac
