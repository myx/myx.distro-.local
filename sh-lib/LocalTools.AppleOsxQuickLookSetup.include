#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

# must allow macosx QuockLook preview show app text files as text.


APP="$MMDAPP/.local/.macosx/Applications/PlainTextUTI.app"

if [ "$1" = --uninstall ]; then
	/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -r "$APP"
	/usr/bin/qlmanage -r
	/usr/bin/qlmanage -r cache
	rm -rf "$APP"
	killall Finder 2>/dev/null || :
	return 0
fi

# Exit if .inf already mapped to public.plain-text in LaunchServices
# return 0 (exit early) only when .inf is associated with public.plain-text
if	/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -dump 2>/dev/null \
	| awk '
  BEGIN { maprec=""; rec="" }
  # accumulate one record (records separated by a blank line)
  NF==0 {
    if (rec ~ /(^|[[:space:]])\.inf([[:space:]]|$)/ && rec ~ /public\.plain-text/) {
      print ".inf -> public.plain-text found"
      exit 0
    }
    rec = ""; next
  }
  { rec = rec $0 "\n" }
  END {
    if (rec ~ /(^|[[:space:]])\.inf([[:space:]]|$)/ && rec ~ /public\.plain-text/) {
      print ".inf -> public.plain-text found"
      exit 0
    }
    exit 1
  }' ; then
  printf '%s\n' ".inf already mapped to public.plain-text. Exiting."
  exit 0
fi

PLIST="$APP/Contents/Info.plist"

# make bundle skeleton
mkdir -p "$APP/Contents/MacOS" "$APP/Contents/Resources"

# write minimal Info.plist that declares .inf and .sh as conforming to public.plain-text
cat >"$PLIST" <<'PL' 
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>CFBundleInfoDictionaryVersion</key>
  <string>6.0</string>
  <key>CFBundleIdentifier</key>
  <string>local.plaintext.uti.claim</string>
  <key>CFBundleName</key>
  <string>PlainTextUTI</string>
  <key>CFBundleVersion</key>
  <string>1.0</string>
  <key>CFBundleExecutable</key>
  <string>PlainTextUTI</string>
  <key>CFBundlePackageType</key>
  <string>APPL</string>
  <key>CFBundleDevelopmentRegion</key>
  <string>en</string>

  <!-- Export local UTIs for each extension to force LaunchServices to record extension -> UTI bindings -->
  <key>UTExportedTypeDeclarations</key>
  <dict>
    <key>local.plaintext.inf</key>
    <dict>
      <key>UTTypeIdentifier</key>
      <string>local.plaintext.inf</string>
      <key>UTTypeConformsTo</key>
      <array><string>public.plain-text</string></array>
      <key>UTTypeDescription</key>
      <string>Plain text INF file</string>
      <key>UTTypeTagSpecification</key>
      <dict>
        <key>public.filename-extension</key>
        <string>inf</string>
        <key>public.mime-type</key>
        <string>text/plain</string>
      </dict>
    </dict>

    <key>local.plaintext.sh</key>
    <dict>
      <key>UTTypeIdentifier</key>
      <string>local.plaintext.sh</string>
      <key>UTTypeConformsTo</key>
      <array><string>public.plain-text</string></array>
      <key>UTTypeDescription</key>
      <string>Shell script</string>
      <key>UTTypeTagSpecification</key>
      <dict>
        <key>public.filename-extension</key>
        <string>sh</string>
        <key>public.mime-type</key>
        <string>text/x-sh</string>
      </dict>
    </dict>

    <key>local.plaintext.md</key>
    <dict>
      <key>UTTypeIdentifier</key>
      <string>local.plaintext.md</string>
      <key>UTTypeConformsTo</key>
      <array><string>public.plain-text</string></array>
      <key>UTTypeDescription</key>
      <string>Markdown</string>
      <key>UTTypeTagSpecification</key>
      <dict>
        <key>public.filename-extension</key>
        <string>md</string>
        <key>public.mime-type</key>
        <string>text/markdown</string>
      </dict>
    </dict>

    <key>local.plaintext.include</key>
    <dict>
      <key>UTTypeIdentifier</key>
      <string>local.plaintext.include</string>
      <key>UTTypeConformsTo</key>
      <array><string>public.plain-text</string></array>
      <key>UTTypeDescription</key>
      <string>Include file</string>
      <key>UTTypeTagSpecification</key>
      <dict>
        <key>public.filename-extension</key>
        <string>include</string>
        <key>public.mime-type</key>
        <string>text/plain</string>
      </dict>
    </dict>
  </dict>

  <key>CFBundleDocumentTypes</key>
  <array>
    <dict>
      <key>CFBundleTypeName</key>
      <string>Plain Text (inf, sh)</string>
      <key>CFBundleTypeExtensions</key>
      <array>
        <string>inf</string>
        <string>sh</string>
        <string>md</string>
        <string>include</string>
      </array>
      <key>LSItemContentTypes</key>
      <array>
        <string>local.plaintext.inf</string>
        <string>local.plaintext.sh</string>
        <string>local.plaintext.md</string>
        <string>local.plaintext.include</string>
        <string>public.plain-text</string>
      </array>
      <key>CFBundleTypeRole</key>
      <string>Viewer</string>
      <key>LSHandlerRank</key>
      <string>Owner</string>
    </dict>
  </array>
</dict>
</plist>
PL

# create a tiny no-op executable so the bundle is valid
cat >"$APP/Contents/MacOS/PlainTextUTI" <<'SH'
#!/bin/sh
# no-op app to satisfy LaunchServices; does nothing if launched
exit 0
SH
chmod +x "$APP/Contents/MacOS/PlainTextUTI"

# register the bundle with LaunchServices and refresh Quick Look
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -f "$APP"
/usr/bin/qlmanage -r
/usr/bin/qlmanage -r cache

# restart Finder so Open With / Quick Look mapping takes effect
killall Finder 2>/dev/null || true

echo "AppleOsxQuickLookSetup: bundle installed at ${APP#$MMDAPP/} and registered. Try Quick Look or Preview on a .inf file now."

return 0

# check1:
: "${MMDAPP:?MMDAPP must be set}"
APP="$MMDAPP/.local/.macosx/Applications/PlainTextUTI.app"
LSREG=/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister
"$LSREG" -dump 2>/dev/null | awk -v path="$APP" 'BEGIN{RS=""; IGNORECASE=1} $0 ~ path { print $0; exit 0 } END{print "NO_RECORD_FOR_APP"; exit 1}' | sed -n '1,400p'

# check2:
: "${MMDAPP:?MMDAPP must be set}"
APP="$MMDAPP/.local/.macosx/Applications/PlainTextUTI.app"
LSREG=/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister
"$LSREG" -dump 2>/dev/null | awk 'BEGIN{RS=""; IGNORECASE=1} /claim id:|bindings:|CFBundleTypeExtensions|extensions:|bindings:/ { print "----\n" $0 "\n----"; exit 0 } END{print "NO_CLAIMS_DISPLAYED"; exit 1}' | sed -n '1,400p'
