#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

### Source custom (user) config in your scripts like this:
###   if [ -f "$MMDAPP/.local/home/$(id -un)/MDLC_SETTINGS.env" ]; then
###     . "$MMDAPP/.local/home/$(id -un)/MDLC_SETTINGS.env"
###   fi
###
case "$1" in
  --*-config-option)
    local scope="$1"; shift
    local cmd="$1";   shift

    local system_file="$MMDAPP/.local/MDLC_SETTINGS.env"
    local user_file ="$MMDAPP/.local/home/$(id -un)/MDLC_SETTINGS.env"
    local config_file tmp new key val ifval curr

    # decide which file we’re touching—and ensure it exists
    case "$scope" in
      --system-config-option)
        config_file=$system_file
        mkdir -p "${config_file%/*}" || return 1
        touch "$config_file"
        ;;
      --custom-config-option)
        config_file=$user_file
        mkdir -p "${config_file%/*}" || return 1
        touch "$config_file"
        # if system never touched yet, create an empty stub so scripts can always source it
        [ -f "$system_file" ] || { mkdir -p "${system_file%/*}"; touch "$system_file"; }
        ;;
      *)
        echo "ERROR: unsupported config scope '$scope'" >&2
        return 1
        ;;
    esac

    # robust temp‐file cleanup
    tmp="$config_file.$$"
    new="$config_file.new.$$"
    trap 'rm -f -- "$tmp" "$new"' EXIT

    case "$cmd" in
      --select-all)
        # all non-comment lines
        grep -h '^[^#].*=' "$config_file"
        ;;

      --select)
        if [ "$1" = --all ]; then
          grep -h '^[^#].*=' "$config_file"
        else
          grep -h "^$1=" "$config_file" | tail -n1 | cut -d= -f2-
        fi
        ;;

      --select-default)
        key=$1; val=$2
        if grep -q "^$key=" "$config_file"; then
          grep -h "^$key=" "$config_file" | tail -n1 | cut -d= -f2-
        else
          printf '%s\n' "$val"
        fi
        ;;

      --upsert)
        key=$1; val=$2
        # remove old key, append new
        grep -v "^$key=" "$config_file" >"$tmp"
        printf '%s=%s\n' "$key" "$val" >>"$tmp"
        mv "$tmp" "$config_file"
        ;;

      --upsert-if)
        key=$1; val=$2; ifval=$3
        curr=$(grep -h "^$key=" "$config_file" | tail -n1 | cut -d= -f2-)
        [ "$curr" != "$ifval" ] && return 0
        # fall through to --upsert
        set -- --upsert "$key" "$val"
        cmd="$1"; shift
        ;;

      --delete)
        key=$1
        grep -v "^$key=" "$config_file" >"$tmp" && mv "$tmp" "$config_file"
        ;;

      --delete-if)
        key=$1; ifval=$2
        curr=$(grep -h "^$key=" "$config_file" | tail -n1 | cut -d= -f2-)
        [ "$curr" != "$ifval" ] && return 0
        # fall through to --delete
        set -- --delete "$key"
        cmd="$1"; shift
        ;;&

      *)
        echo "ERROR: unknown config operation '$cmd'" >&2
        return 1
        ;;
    esac

    return 0
    ;;
esac
