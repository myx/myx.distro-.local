#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

: "${MMDAPP:?â›” ERROR: MMDAPP is not set}"

: "${MDLT_ORIGIN:=$MMDAPP/.local}"

if ! type DistroLocalContext >/dev/null 2>&1 ; then
	DistroLocalContext(){

		case "$1" in
			--init-variables)
				[ -n "$MDLT_ORIGIN" ] && [ -n "$MDLT_OPTION" ] && return 0
				local MDLT_CONSOLE_ORIGIN="$( ( . "$MMDAPP/.local/MDLT.settings.env" && echo "${MDLT_CONSOLE_ORIGIN:-$MMDAPP/.local}" ) )"
				MDSC_INMODE="${MDLT_CONSOLE_ORIGIN#$MMDAPP/}"
				case MDSC_INMODE in
					.local)
						export MDLT_ORIGIN="$MMDAPP/.local"
						export MDSC_INMODE=".local"
						return 0
					;;
					source)
						if [ -f "$MMDAPP/" ]
						export MDLT_ORIGIN="$MMDAPP/$MDSC_INMODE"
						return 0
					;;
					*)
						echo "ðŸ™‹ WARNING: LocalContext.SetInputSpec: MDLT_CONSOLE_ORIGIN spec: $MDLT_CONSOLE_ORIGIN, defaulting to '.local'" >&2
						export MDLT_ORIGIN="$MMDAPP/.local"
						export MDSC_INMODE=".local"
						return 0
					;;
				esac
			;;
			--is-spec-option)
				case "$2" in
					--run-from-source|--run-from-.local)
						return 0
					;;
				esac
				set +e ; return 1
			;;
			*)
				if DistroLocalContext --is-spec-option "$1" ; then
					local adpcChangeSpec="true"
			
					[ -z "$MDSC_DETAIL" ] || echo "DistroLocalContext: input spec: $1" >&2
					. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalContext.SetInputSpec.include"		
					return 0
				fi
			;;
		esac
	}
fi	

if ! type Require >/dev/null 2>&1 ; then
	Require(){
		local distroCommand="$1" ; shift
		if [ -z "$distroCommand" ] || [ "--help" == "$distroCommand" ] ; then
			( . "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/HelpRequire.include" )
			set +e ; return 1
		fi
		if type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
			return 0
		fi
		
		local ITEM
		for ITEM in .local system source deploy remote ; do
			if [ -f "$MDLT_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh" ] ; then
				. "$MDLT_ORIGIN/myx/myx.distro-$ITEM/sh-scripts/${distroCommand%.fn.sh}.fn.sh"
				return 0
			fi
		done
		source "${distroCommand%.fn.sh}.fn.sh"
		return 0
	}
fi

if ! type Local >/dev/null 2>&1 ; then
	Local(){
		case "$1" in
			''|--*)
				( . "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalConsole.include" )
				set +e ; return 1
			;;
		esac
		local distroCommand="$1" ; shift
		if ! type "${distroCommand%.fn.sh}" >/dev/null 2>&1 ; then
			. "${distroCommand%.fn.sh}.fn.sh"
		fi
		"${distroCommand%.fn.sh}" "$@"
	}
fi

while true ; do
	if [ "--verbose" = "$1" ] ; then
		export MDSC_DETAIL="true"
		shift
		continue
	fi 
	if DistroLocalContext --is-spec-option "$1" ; then
		[ -n "$MDSC_DETAIL" ] && echo "DistroLocalContext: input spec: $1" >&2
		. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalContext.SetInputSpec.include"		
		shift
		continue
	fi
	break
done

