syntax: DistroLocalTools.fn.sh --{system|custom}-config-option <operation>

	Options:

		--help-install-unix-bare
			Displays instructions for barest unix install.

		--install-distro-remote
		--install-distro-deploy
		--install-distro-source
			Installs basic system tools into designated workspace directory that allows
			to enter workspace console or otherwise work with workspace data and commands.

		--install-distro-.local
			Upgrades local .local packages with latest `master` version.

		--system-config-option <arguments...>
		--custom-config-option <arguments...>
			Sets the workspace environment parameter. 'system' is common for workspace and
			'custom' is for current workspace user.

			Following operations (arguments) are supported:

				--select <option-name>
				--select-default <option-name> <default-value>
					Reads one or all variables. If value is not set, default-value is returned.

				--select --all
				--select-all
					Reads all variables. 

				--upsert <option-name> <value>
				--upsert-if <option-name> <value> <if-value>
					Sets a variable. Optionally, sets variable only if it's current value
					is set to given value.

				--delete <option-name>
				--delete-if <option-name> <if-value>
					Deletes a variable. Optionally, deletes the variable only if it's value
					is set to given value.

			Following options are defined (list of basic ones, option names are not limited
			to this list, but these options are actively used by scripts of this package):

				MDLT_CONSOLE_ORIGIN
					Supports values of ".local" or "source". This parameter is used (with some 
					extra sanity checks) while detecting MDLC_ORIGIN context value.

				MDLT_CONSOLE_SCRIPT
					Shell script to include in console initialisation process. Allows to setup 
					extra commands or settings. Note: before including this script, $HOME/.bashrc
					will be included automatically, if present.

				MDLT_ACTIONS_SH_WRAP
					Shell command to wrap shell actions to execute. Allows to run actions on
					remote runner machine or add extra logging/notification, etc...

		--make-console-command
			Re-Creates `DistroLocalConsole.sh` script to be used as a command to quickly enter workspace 
			console.

		--make-workspace-integration-files
			Re-Creates `Distro*Console.sh` scripts for all components installes to be used as commands to 
			quickly enter workspace console.

	Examples (in Local Console, within workspace context):

		DistroLocalTools.fn.sh --install-distro-source
		DistroLocalTools.fn.sh --install-distro-deploy
		DistroLocalTools.fn.sh --install-distro-remote

		DistroLocalTools.fn.sh --help

		DistroLocalTools.fn.sh --install-distro-source --install-distro-deploy
		DistroLocalTools.fn.sh --install-distro-source --install-distro-deploy --install-distro-remote

	Examples (in OS default shell):

		bash .local/myx/myx.distro-.local/sh-scripts/DistroLocalTools.fn.sh --install-distro-source --install-distro-deploy --install-distro-remote

		bash .local/myx/myx.distro-.local/sh-scripts/DistroLocalTools.fn.sh
		bash .local/myx/myx.distro-.local/sh-scripts/DistroLocalTools.fn.sh --help
		bash .local/myx/myx.distro-.local/sh-scripts/DistroLocalTools.fn.sh --help-install-unix-bare
