#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

echo "LocalConsole: Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

export MDLC_BIN="$MMDAPP/.local"

# search: 1) previous path; 2) distro {.local|system|deploy|source} scripts.

PATH+=":$MDLC_BIN/myx/myx.distro-.local/sh-scripts"

LocalConsole(){
	. "$MDLC_BIN/myx/myx.distro-.local/sh-lib/DistroLocalConsole.include"
	return 0
}

if [ -d "$MDLC_BIN/myx/myx.distro-system/sh-scripts" ] ; then
	PATH+=":$MDLC_BIN/myx/myx.distro-system/sh-scripts"

	SystemConsole(){
		return 0
	}
fi

if [ -d "$MDLC_BIN/myx/myx.distro-deploy/sh-scripts" ] ; then
	PATH+=":$MDLC_BIN/myx/myx.distro-deploy/sh-scripts"

	echo "LocalConsole: Type 'DeployConsole' to start Deploy Console." >&2

	DeployConsole(){
		$MDLC_BIN/myx/myx.distro-deploy/actions/distro/deploy-tools/deploy-console.sh
		return 0
	}
fi

if [ -d "$MDLC_BIN/myx/myx.distro-source/sh-scripts" ] ; then
	PATH+=":$MDLC_BIN/myx/myx.distro-source/sh-scripts"

	echo "LocalConsole: Type 'SourceConsole' to start Source Console." >&2

	SourceConsole(){
		$MDLC_BIN/myx/myx.distro-source/actions/distro/source-tools/source-console.sh
		return 0
	}
fi

if [ -d "$MDLC_BIN/myx/myx.distro-remote/sh-scripts" ] ; then
	PATH+=":$MDLC_BIN/myx/myx.distro-remote/sh-scripts"

	echo "LocalConsole: Type 'RemoteConsole' to start Remote Console." >&2

	RemoteConsole(){
		$MDLC_BIN/myx/myx.distro-remote/actions/distro/remote-tools/remote-console.sh
		return 0
	}
fi

. "$MDLC_BIN/myx/myx.distro-.local/sh-lib/DistroLocalContext.include"
DistroLocalContext --run-from-.local

Require DistroLocalTools

complete -W "\` DistroLocalTools --completion-all \`" "."
complete -W "\` DistroLocalTools --completion-all \`" "*"
complete -W "\` DistroLocalTools --completion-all \`" "which"
complete -W "\` DistroLocalTools --completion-require \`" "Require"
complete -W "\` DistroLocalTools --completion-.local \`" "Local"

PS1="\` LocalConsole --shell-prompt \`: $PS1"
export PS1
