#!/usr/bin/env bash
# ^^^ for syntax checking in the editor only

[ -z "$MDLT_ORIGIN" ] && echo "LocalConsole: Working in $MMDAPP" >&2
[ -f "$HOME/.bashrc" ] && . "$HOME/.bashrc" 

. "${MDLT_ORIGIN:-$MMDAPP/.local}/myx/myx.distro-.local/sh-lib/LocalContext.include"
DistroLocalContext --run-from-detect

# search: 1) previous path; 2) distro {.local|system|deploy|source} scripts.

if [ -x "$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin/myx.common" ] ; then
	export MYXROOT="$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/share/myx.common"
	PATH="$MDLT_ORIGIN/myx/myx.common/os-myx.common/host/tarball/bin:$PATH"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-.local/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-.local/sh-scripts"

	LocalConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/console-.local-bashrc.rc" -i "$@"
		return 0
	}
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-system/sh-scripts"
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-deploy/sh-scripts"

	if [ -t 0 ]; then
		echo "LocalConsole: Type 'DeployConsole' to start Deploy Console." >&2
	fi

	DeployConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-deploy/sh-lib/console-deploy-bashrc.rc" -i "$@"
		return 0
	}
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-source/sh-scripts"

	if [ -t 0 ]; then
		echo "LocalConsole: Type 'SourceConsole' to start Source Console." >&2
	fi

	SourceConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-source/sh-lib/console-source-bashrc.rc" -i "$@"
		return 0
	}
fi

if [ -d "$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts" ] ; then
	PATH+=":$MDLT_ORIGIN/myx/myx.distro-remote/sh-scripts"

	if [ -t 0 ]; then
		echo "LocalConsole: Type 'RemoteConsole' to start Remote Console." >&2
	fi

	RemoteConsole(){
		bash --rcfile "$MDLT_ORIGIN/myx/myx.distro-remote/sh-lib/console-remote-bashrc.rc" -i "$@"
		return 0
	}
fi

Help(){
	( . "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/help/Help.DistroLocalConsole.include" )
	set +e ; return 1
}


[ "$USER" = "$( id -un )" ] || {
	export USER="$( id -un )"
}


while true; do 
	case "$(
		set -- --.local-config-option-select-default MDLT_CONSOLE_HISTORY default
		. "$MDLT_ORIGIN/myx/myx.distro-.local/sh-lib/LocalTools.Config.include"
	)" in
		workspace-personal|default)
			mkdir -p "$MMDAPP/.local/home/${USER}"
			export HISTFILE="$MMDAPP/.local/home/${USER}/.bash_history" ;;
		workspace-separate)
			mkdir -p "$MMDAPP/.local/home/${USER}"
			export HISTFILE="$MMDAPP/.local/home/${USER}/.bash_history_.local" ;;
		local-machine-home)
			export HISTFILE="$HOME/.bash_history_${MMDAPP##*/}" ;;
		workspace-shared)
			export HISTFILE="$MMDAPP/.local/.common_bash_history" ;;
		bash-default)
			export HISTFILE="$HOME/.bash_history"; break ;;
		user-default) 
			break ;;
		*)
			echo "â›” ERROR: unknown MDSC_HISTORY: $MDSC_HISTORY" >&2; exit 1 ;;
	esac 
	export HISTCONTROL=ignoredups:erasedups
	export HISTSIZE=999
	export HISTFILESIZE=99999
	shopt -s histappend 2>/dev/null || :
	break
done


complete -W "\` Local --completion-all \`" ""
complete -W "\` Local --completion-all \`" "*"
complete -W "\` Local --completion-all \`" "which"
complete -W "\` Local --completion-require \`" "Require"
complete -W "\` Local --completion-.local \`" "Local"

export LANG=en_US.UTF-8

PROMPT_COMMAND='set +ex ; history -w; history -r ; PS1="$( Local --shell-prompt )"'

export PATH
